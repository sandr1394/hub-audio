plugins {
    id "io.freefair.lombok"
}

//this is required to publish the spring boot apps because of bootJar weirdness - https://docs.gradle.org/current/userguide/upgrading_version_6.html
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bootJar)
    }
}

bootJar {
    enabled = true
}


configurations {
    jmockLib {
        extendsFrom testCompile
    }
}

dependencies {
    implementation project(':web-hub-audio-db-scripts')
    implementation("com.prosper.platform:web-hub-gcp-client:${webHubCommonVersion}")
    implementation("com.prosper.platform:spring-boot-base:${springBootBaseVersion}")
    implementation("com.prosper.platform:spring-boot-base-jdbc:${springBootBaseVersion}")
    implementation("com.prosper.platform:spring-boot-base-db-migration:${springBootBaseVersion}")
    implementation("com.prosper.platform:spring-boot-base-security:${springBootBaseVersion}")
    implementation("com.prosper.platform:web-hub-security-jwt:${webHubCommonVersion}")
    implementation("com.prosper.platform:spring-boot-base-models:${springBootBaseVersion}")
    implementation("com.prosper.platform:spring-boot-base-cache:${springBootBaseVersion}")
    implementation("org.springframework.security:spring-security-oauth2-resource-server")
    implementation("org.springframework.security:spring-security-oauth2-jose")

    implementation('io.jsonwebtoken:jjwt-api:0.11.2')
    runtime('io.jsonwebtoken:jjwt-impl:0.11.2')
    runtime('io.jsonwebtoken:jjwt-jackson:0.11.2')
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")
    implementation("com.prosper.platform:spring-boot-base-test:${springBootBaseVersion}")
    implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    implementation("org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}")
    implementation "org.apache.commons:commons-text:1.9"
    implementation "commons-io:commons-io:2.5"
    implementation "org.apache.commons:commons-compress:1.20"

    testImplementation "com.prosper.platform:spring-boot-base-security-test:${springBootBaseVersion}"
    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito:mockito-core:3.3.0"
    testImplementation "org.powermock:powermock-module-junit4:${powerMockVersion}"
    testImplementation "org.powermock:powermock-api-mockito2:${powerMockVersion}"
}

test {
    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }

    afterTest { descriptor, result ->
        logger.lifecycle("Executed test ${descriptor} with result: ${result.resultType}")
    }

    testLogging {
        showStackTraces = true
        exceptionFormat = "full"
    }
}
